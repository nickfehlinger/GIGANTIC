<div class="container">
	<div class="row dashboard">
		<div class="col-md-6 dashboardsec" id="calendarsection">
			<h3 id="calendarTitle">Calendar <span class="glyphicon glyphicon-plus-sign" id="newEventBtn" aria-hidden="true"></span></h3>
			<h4 id="employers"><span id="employershow"><span class="glyphicon glyphicon-briefcase"></span> Employers</span> <span class="glyphicon glyphicon-plus-sign" id="newEmployerBtn"></span></h4>
			<div id="newEvent">
				<%= render 'events/form', event: @event %>
			</div>
			<div id="employerlist">
			<h3>Employer Breakdown This Month</h3>
				<% @employers.each do |employer| %>
				<p><%=link_to employer_path(employer), method: :delete do %><span class="glyphicon glyphicon-remove deleteBtn" aria-hidden="true"></span><% end %><%= link_to employer.name, employer %> <span class="colordot" style="background-color: <%= employer.color %>;"></span></p>
				<% end %>
				<p id="legend">Inner Loop: Hours | Outer: Pay</p>
				<canvas id="employerchart" width="400" height="400"></canvas>
			</div>
			<div id="newEmployer">
				<%= simple_form_for(@employer) do |f| %>
				  <%= f.error_notification %>

				  <div class="form-inputs">
				    <%= f.input :name, placeholder: 'Name', label: false %>
				    <%= f.input :contact_person, placeholder: 'Contact Person', label: false %>
				    <%= f.input :phone, placeholder: 'Phone Number', label: false %>
				    <%= f.input :email, placeholder: 'Email', label: false %>
				    <%= f.input :pay_rate, placeholder: 'Pay Rate', label: false %>
				    <%= f.input :pay_type, as: :select, prompt: 'Hourly?', label: false %>
				    <label for="employer[color]" class="colorinput">Pick a color to represent this employer:</label>
				    <input type="color" name="employer[color]" class="colorinput" value="#ff7700">
				  </div>

				  <div class="form-actions">
				    <%= f.button :submit %>
				  </div>
				<% end %>
			</div>
			<div id="calendar"></div>
			<p id="monthearnings"></p>
			<div class="progress" id=incomeProgress>
			  <div id="earnedBudget" class="progress-bar" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 0%;">
			    0%
			  </div>
			</div>

	    </div>
		<div class="col-md-6 dashboardsec" id="budgetsection">
			<div id="budgets">
			<h3>Budgets <span class="glyphicon glyphicon-plus-sign" aria-hidden="true" id="budgcatbtn"></span></h3>
			<div class="budgcatform">
			<%= render '/budget_categories/form', budget_category: @budget_category %>
			</div>
			<% @budget_categories.each do |budgetcat| %>
				<h4><%=link_to budget_category_path(budgetcat), method: :delete do %><span class="glyphicon glyphicon-remove deleteBtn" aria-hidden="true"></span><% end %><%= budgetcat.name %> <span class="glyphicon glyphicon-plus-sign newBudget" aria-hidden="true" id="budgetcat<%= budgetcat.id %>formBtn"></span></h4>
				<div id="budgetcat<%= budgetcat.id %>form" class="budgetforms">
				<%= simple_form_for(@budget) do |f| %>
				  <%= f.error_notification %>

				  <div class="form-inputs">
				    <%= f.input :name, label: false, placeholder: 'New ' + budgetcat.name + ' Budget' %>
				    <%= f.input :amount, label: false, placeholder: 'Budget Amount' %>
				    <%= f.input :recurring_type, label: false, collection: ([['Monthly', 1], ['Bi-Weekly', 2], ['Weekly', 4]]), prompt: 'Recurring Type' %>
				    <%= f.association :budget_category, as: :hidden, input_html: {value: budgetcat.id} %>
				  </div>

				  <div class="form-actions">
				    <%= f.button :submit %>
				  </div>
				<% end %>
				</div>
				<script type="text/javascript">
					$("#budgetcat<%= budgetcat.id %>formBtn").click(function(){
						$("#budgetcat<%= budgetcat.id %>form").toggle(1000);
					});
				</script>
				<% budgetcat.budgets.each do |budget| %>
					<p><%=link_to budget_path(budget), method: :delete do %><span class="glyphicon glyphicon-remove deleteBtn" aria-hidden="true"></span><% end %><%= budget.name %> <span class="glyphicon glyphicon-plus-sign newTransaction" aria-hidden="true" id="budget<%= budget.id %>formBtn"></span> <span class="glyphicon glyphicon-list listTransaction" aria-hidden="true" id="budget<%= budget.id %>TransactionBtn"></span></p>
					<div class="transactionforms" id="budget<%= budget.id %>form">
					<%= simple_form_for(@transaction) do |f| %>
					  <%= f.error_notification %>

					  <div class="form-inputs">
					    <%= f.input :merchant, label:false, placeholder: 'Transaction For ' + budget.name %>
					    <%= f.input :note, label: false, placeholder: 'Note' %>
					    <%= f.input :amount, label: false, placeholder: 'Amount' %>
					    <%= f.association :budget, as: :hidden, input_html: {value: budget.id} %>
					  </div>

					  <div class="form-actions">
					    <%= f.button :submit %>
					  </div>
					<% end %>
					</div>
					<div class="progress">
  						<div class="progress-bar" role="progressbar" aria-valuenow="<%= budget.percent %>" aria-valuemin="0" aria-valuemax="100" style="width: <%= budget.percent %>%" id="budget<%= budget.id %>" data-budget="<%= budget.amount %>">
  						<%= budget.percent %>%
  						</div>
					</div>
					<div id="budget<%= budget.id %>Transactions" class="transactions">
						<% budget.transactions.each do |transaction| %>
						<p class="transactionP" data-toggle="tooltip" title="<%= transaction.note%>"><%=link_to transaction_path(transaction), method: :delete do %><span class="glyphicon glyphicon-remove deleteBtn" aria-hidden="true"></span><% end %><%= transaction.merchant %>: <%= transaction.amount %></p>
						<% end %>
					</div>
					<script type="text/javascript">
					$("#budget<%= budget.id %>formBtn").click(function(){
						$("#budget<%= budget.id %>form").toggle(1000);
					});
					$("#budget<%= budget.id %>TransactionBtn").click(function(){
						$("#budget<%= budget.id %>Transactions").toggle(1000);
					});
					</script>
				<% end %>
			<% end %>
			<div id="newBudgets"></div>
			<script type="text/javascript">
				$("#budgcatbtn").click(function(e){
					$(".budgcatform").toggle(1000);
				});
			</script>
			<h4>Total</h4>
			<p id="total"><%= @budgets.sum(:amount) %></p>
			<div class="progress">
  				<div class="progress-bar" role="progressbar" aria-valuenow="<%= @total_percent %>" aria-valuemin="0" aria-valuemax="100" style="width: <%= @total_percent %>%" id="totalProgress">
  				<% if @total_percent %>
  				<%= @total_percent %> %
  				<% end %>
  				</div>
			</div>
		</div>
	</div>
</div>
<script type="text/javascript">
	document.addEventListener("DOMContentLoaded", function() {
	// initialize calendar
$('#calendar').fullCalendar({
		events: 'events.json',
		aspectRatio: 1
	});
$(document).ready(function(){
    $('[data-toggle="tooltip"]').tooltip(); 
});
// define transactions
var transactions;
$.ajax({
	url: '/transactions.json',
	success: function(data) {
		transactions = data;
	}
})
// define budgets
var budgets;
$.ajax({
	url: '/budgets.json',
	success: function(data) {
		budgets = data;
	}
})
var view,
	start,
	end;
App.getIdOrFilter = function () {
    view = $('#calendar').fullCalendar('getView');
    start = view.intervalStart;
    end   = view.intervalEnd;
    return function (e) {
        // this is our event filter
        if (e.start >= start && e.end <= end) {
            // event e is within the view interval
            return true;
        }
        // event e is not within the current displayed interval
        return false;
    };
}
$("#newEventBtn").click(function(){
	$("#newEvent").toggle(1000);
});
$("#newEmployerBtn").click(function(){
	$("#newEmployer").toggle(1000);
})
$("#employershow").click(function(){
	$("#employerlist").toggle({duration: 1000, effect: 'fade'});
})

$(".fc-button").click(function(){
	updatePage();
});

// Bootstrap Tour for first time users
var tour = new Tour({
  backdrop: true,
  steps: [
  {
    title: "Welcome To GIGANTIC",
    content: "Thank you so much for choosing GIGANTIC!",
    orphan: true
  },
  {
    element: "#budgetsection",
    title: "Keep track of your budget!",
    content: "GIGANTIC's easy to use budget tracker let's you input your monthly expenses and track your spending so you always know what you need for the month."
  },{
  	element: "#calendarsection",
  	title: "Keep track of your schedule!",
  	content: "GIGANTIC's calendar makes it easy to keep track of when your working and who you're working for."
  },{
  	element: "#newEmployerBtn",
  	title: "Add Employers",
  	content: "First add your employers information here..."
  },{
  	element: "#newEventBtn",
  	title: "Add Gigs",
  	content: "...then add gigs to your calendar!"
  },{
  	element: "#incomeProgress",
  	title: "Track Your Progress",
  	content: "GIGANTIC automatically adds up your hours and shows you how much of your monthly budget you will earn with the jobs you have booked."
  },{
  	element: ".fc-button-group",
  	title: "Plan Ahead",
  	content: "Look at future months to see how far your current gigs will last you so you can plan for slow months."
  },{
  	element: "#employershow",
  	title: "See Where Your Income Is Coming From",
  	content: "GIGANTIC's employer graphs help you keep track of which of your employers are giving you the most work and which ones are paying you the most money for your time."
  },{
  	title: "Enjoy!",
  	content: "With GIGANTIC you can rest easy knowing what you have coming in and how long it will last you giving you more time to enjoy everything else.",
  	orphan: true
  }
]});

// Initialize the tour
tour.init();

// Start the tour
tour.start();

function updatePage(){
	setTimeout( function(){
		var events = $('#calendar').fullCalendar('clientEvents', App.getIdOrFilter());
		var checks = []
		var currentTrans = transactions.filter(function (e) {
	        if (moment(e.created_at) >= start && moment(e.created_at) <= end) {
	            return true;
	        }
	        return false;
	    })
		var total = currentTrans.reduce((pv, cv) => pv+parseFloat(cv.amount), 0);
	    var totals = currentTrans.reduce(function(obj,transaction){
		  let key = transaction.budget_id + "";
		  obj[key] = (obj[key] || 0) + parseFloat(transaction.amount);
		  return obj;
		},{});
		budgets.forEach(function(budget){
		  let id = budget.id + "";
		  document.getElementById("budget"+id).style.width = (totals[id] || 0) / budget.amount * 100 + "%";
		  document.getElementById("budget"+id).innerText = parseInt((totals[id] || 0) / budget.amount * 100) + "%";
		});
		var budgetTotal = parseInt(document.getElementById("total").innerText);
		var totalProgress = document.getElementById("totalProgress");
		var budgetProgress = total / budgetTotal * 100;
		totalProgress.style.width = budgetProgress + "%"
		totalProgress.innerText = parseInt(budgetProgress) + "%"
		for(i = 0; i < events.length; i++) {
			if(events[i].pay_type == true){
				checks.push(((events[i].end - events[i].start) / 1000 / 60 / 60) * events[i].pay_rate);
				
			}else{
				checks.push(parseInt(events[i].pay_rate));
			};
		};

		// rollover from previous month
		var prevstart = moment("<%= current_user.created_at %>");
		var prevend = moment(end).subtract(1, "months");
		if( prevstart < start ){
			var prevchecks = [];
			var prevevents = $("#calendar").fullCalendar('clientEvents', function(e){
				return e.start >= prevstart && e.end <= prevend;
			});
			for(i = 0; i < prevevents.length; i++) {
				if(prevevents[i].pay_type == true){
				prevchecks.push(((prevevents[i].end - prevevents[i].start) / 1000 / 60 / 60) * prevevents[i].pay_rate);
				
				}else{
					prevchecks.push(parseInt(prevevents[i].pay_rate));
				};
			};
			var prevMonthsPay = prevchecks.reduce((pv, cv) => pv+cv, 0);
			var rollover = prevMonthsPay - (budgetTotal * Math.ceil(prevend.diff(prevstart, 'months', true)));
			checks.push(rollover)
		}
		// end rollover
		var monthPay = checks.reduce((pv, cv) => pv+cv, 0);
		var percentEarned = parseInt(monthPay / budgetTotal * 100);
		var progressBar = document.getElementById("earnedBudget");
		progressBar.setAttribute("aria-valuenow", percentEarned);
		progressBar.setAttribute("style", "width: " + percentEarned + "%");
		progressBar.innerText = percentEarned + "%";
		document.getElementById("monthearnings").innerText = "$" + monthPay + " earned this month";
		// doughnut chart
		var curremps = events.map( o => o.employer ).filter( (v,i,a) => a.indexOf(v) === i );
		var currempchecks = [];
		var curremppay = [];
		var curremphours = [];
		var curremphourstot = [];
		var currempcolors = [];
			// get all the events for the employer	
			for(i = 0; i < curremps.length; i ++){
				var currempevents = events.filter(e => e.employer === curremps[i]);
				// calculate the checks for that employers events
				for( n = 0; n < currempevents.length; n ++ ){
					if(currempevents[n].pay_type == true){
				currempchecks.push(((currempevents[n].end - currempevents[n].start) / 1000 / 60 / 60) * currempevents[n].pay_rate);
				
				}else{
					currempchecks.push(parseInt(currempevents[n].pay_rate));
					console.log(currempevents[n].pay_type)
				};
					curremphours.push((currempevents[n].end - currempevents[n].start) / 1000 / 60 / 60);
					currempcolors.push(currempevents[n].color);
				};
				// add them up and push them to curremppay
				curremppay.push(parseInt(currempchecks.reduce((pv, cv) => pv+cv, 0)));
				curremphourstot.push(parseInt(curremphours.reduce((pv, cv) => pv+cv, 0)));
				currempchecks = [];
				curremphours = [];
			}
			currempcolors = currempcolors.filter( (v,i,a) => a.indexOf(v) === i );
		var ctx = $("#employerchart");
		var myChart = new Chart(ctx, {
		    type: 'doughnut',
		    data: {
		        labels: curremps,
		        datasets: [{
		            label: 'Pay Per Employer',
		            data: curremppay,
		            backgroundColor: currempcolors,
		            borderColor: '#444',
		            hoverBorderColor: '#ff7;',
		            borderWidth: 1
		        },{
		        	label: 'Hours Per Employer',
		            data: curremphourstot,
		            backgroundColor: currempcolors,
		            borderColor: '#444',
		            hoverBorderColor: '#ff7;',
		            borderWidth: 1
		        }]
		    },
		    options: {
		        legend: {
		        	display: false,
		        }
		    }
		});
	}, 100);
};
updatePage()
});
</script>